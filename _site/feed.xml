<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2019-03-25T11:23:47-04:00</updated><id>/feed.xml</id><title type="html">Robert B. Wexler</title><subtitle>Tips and tricks for electronic structure calculations from a  soon-to-be PhD in chemistry.</subtitle><entry><title type="html">Generate thermal profiles for LAMMPS simulations</title><link href="/thermal/profile/lammps/2019/03/25/thermal-profile-lammps.html" rel="alternate" type="text/html" title="Generate thermal profiles for LAMMPS simulations" /><published>2019-03-25T00:00:00-04:00</published><updated>2019-03-25T00:00:00-04:00</updated><id>/thermal/profile/lammps/2019/03/25/thermal-profile-lammps</id><content type="html" xml:base="/thermal/profile/lammps/2019/03/25/thermal-profile-lammps.html">&lt;p&gt;This notebook generates thermal profiles for LAMMPS simulations. All you need to do is define the temperatures then the notebook will generate an NVT equilibration phase (10K steps), NPT equilibration phase (40K steps, P = 1.01325 bar), and NPT sampling step (40K steps, P = 1.01325 bar) for each temperature. Should be easy to make modifications. Please feel free to do so. If youâ€™d like me to include your updates, then please shoot me an email with your notebook or Python script.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# loads numpy
&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# define temperatures
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;temps&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;temps&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;array([10, 20])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# generate thermal profile
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temps&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;# nvt equilibration
&lt;/span&gt;            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fix {} all nvt temp {} {} 1.0&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;run 10000&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;unfix {}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;# npt equilibration
&lt;/span&gt;            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fix {} all npt temp {} {} 1.0 aniso 1.01325 1.01325 5.0&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;run 40000&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;unfix {}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;# npt sampling
&lt;/span&gt;            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fix {} all npt temp {} {} 1.0 aniso 1.01325 1.01325 5.0&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;dump {} all custom 200 dump{:03d}.xyz x y z&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;dump_modify {} sort id&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;run 40000&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;write_restart BST.restart{:03d}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;undump {}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;unfix {}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fix 1 all nvt temp 10 10 1.0
run 10000
unfix 1

fix 2 all npt temp 10 10 1.0 aniso 1.01325 1.01325 5.0
run 40000
unfix 2

fix 3 all npt temp 10 10 1.0 aniso 1.01325 1.01325 5.0
dump 3 all custom 200 dump010.xyz x y z
dump_modify 3 sort id
run 40000
write_restart BST.restart010
undump 3
unfix 3

fix 4 all nvt temp 20 20 1.0
run 10000
unfix 4

fix 5 all npt temp 20 20 1.0 aniso 1.01325 1.01325 5.0
run 40000
unfix 5

fix 6 all npt temp 20 20 1.0 aniso 1.01325 1.01325 5.0
dump 6 all custom 200 dump020.xyz x y z
dump_modify 6 sort id
run 40000
write_restart BST.restart020
undump 6
unfix 6
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><summary type="html">This notebook generates thermal profiles for LAMMPS simulations. All you need to do is define the temperatures then the notebook will generate an NVT equilibration phase (10K steps), NPT equilibration phase (40K steps, P = 1.01325 bar), and NPT sampling step (40K steps, P = 1.01325 bar) for each temperature. Should be easy to make modifications. Please feel free to do so. If youâ€™d like me to include your updates, then please shoot me an email with your notebook or Python script.</summary></entry><entry><title type="html">gzip in parallel using pigz</title><link href="/gzip/parallel/pigz/2019/03/24/gzip-in-parallel.html" rel="alternate" type="text/html" title="gzip in parallel using pigz" /><published>2019-03-24T00:00:00-04:00</published><updated>2019-03-24T00:00:00-04:00</updated><id>/gzip/parallel/pigz/2019/03/24/gzip-in-parallel</id><content type="html" xml:base="/gzip/parallel/pigz/2019/03/24/gzip-in-parallel.html">&lt;p&gt;If you are running MD simulations, then this is the post for you. It can sometimes be a nightmare to compress MD trajectories because they can be so large, like multiple GBs (or maybe even TBs if youâ€™re working with gigantic systems). Up until now, I have found myself deleting MD trajectors but saving a restart file so that I can regenerate the data if I need to do further processing. This can be somewhat of a drag so I went searching for a way to compress MD trajectories in parallel. Thatâ€™s when I came across &lt;a href=&quot;https://zlib.net/pigz/&quot;&gt;pigz&lt;/a&gt;. If you already know how to make a &lt;code class=&quot;highlighter-rouge&quot;&gt;tar.gz&lt;/code&gt; file, then it is really easy to use pigz. For example, the pigz command corresponding to&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;tar zcvf &amp;lt;filename&amp;gt;.tar.gz &amp;lt;filename/directory_name/etc&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;is&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;tar cvf - &amp;lt;filename/directory_name/etc&amp;gt; | pigz -n &amp;lt;number_cores&amp;gt; &amp;lt;filename&amp;gt;.tar.gz&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;</content><author><name></name></author><summary type="html">If you are running MD simulations, then this is the post for you. It can sometimes be a nightmare to compress MD trajectories because they can be so large, like multiple GBs (or maybe even TBs if youâ€™re working with gigantic systems). Up until now, I have found myself deleting MD trajectors but saving a restart file so that I can regenerate the data if I need to do further processing. This can be somewhat of a drag so I went searching for a way to compress MD trajectories in parallel. Thatâ€™s when I came across pigz. If you already know how to make a tar.gz file, then it is really easy to use pigz. For example, the pigz command corresponding to</summary></entry><entry><title type="html">Inverting the Time-Independent Schrodinger Equation</title><link href="/inverting/time/independent/schrodinger/equation/2019/02/12/invert-se.html" rel="alternate" type="text/html" title="Inverting the Time-Independent Schrodinger Equation" /><published>2019-02-12T00:00:00-05:00</published><updated>2019-02-12T00:00:00-05:00</updated><id>/inverting/time/independent/schrodinger/equation/2019/02/12/invert-se</id><content type="html" xml:base="/inverting/time/independent/schrodinger/equation/2019/02/12/invert-se.html">&lt;p&gt;A few days ago, I had to write a section of my thesis on pseudopotentials. In the Rappe group, we use designed nonlocal, optimized, norm-conserving pseudopotentials. Thatâ€™s a mouthful. Letâ€™s break it down.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Norm-conserving&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This means two things. First, that the integral under the tail of the pseudo-wave functions (approximate) is equal to that of the all-electron wave functions (more exact). Mathematically speaking, this looks like&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;a x^{2} + b x + c = 0&lt;/script&gt;

&lt;p&gt;(Under constructionâ€¦)
(I will get back to this soon, I promise!)&lt;/p&gt;</content><author><name></name></author><summary type="html">A few days ago, I had to write a section of my thesis on pseudopotentials. In the Rappe group, we use designed nonlocal, optimized, norm-conserving pseudopotentials. Thatâ€™s a mouthful. Letâ€™s break it down.</summary></entry><entry><title type="html">Running Quantum Espresso on Conrad and Gordon</title><link href="/qe/2019/01/29/running-qe-on-conrad.html" rel="alternate" type="text/html" title="Running Quantum Espresso on Conrad and Gordon" /><published>2019-01-29T00:00:00-05:00</published><updated>2019-01-29T00:00:00-05:00</updated><id>/qe/2019/01/29/running-qe-on-conrad</id><content type="html" xml:base="/qe/2019/01/29/running-qe-on-conrad.html">&lt;p&gt;Today, I figured out that there is a working &lt;code class=&quot;highlighter-rouge&quot;&gt;pw.x&lt;/code&gt; executable for Quantum Espresso on the DoD machines Conrad and Gordon. It is located in &lt;code class=&quot;highlighter-rouge&quot;&gt;/app/espresso/6.3-intel/bin&lt;/code&gt;. All you need is a PBS script with an execution line like&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;aprun -n 32 /app/espresso/6.3-intel/bin/pw.x &amp;lt; qe.in &amp;gt; qe.out
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Also, you need to do &lt;code class=&quot;highlighter-rouge&quot;&gt;module load intel&lt;/code&gt; prior to submitting the job. You can either add a line in your &lt;code class=&quot;highlighter-rouge&quot;&gt;.bashrc&lt;/code&gt; or place it in the PBS script. Enjoy!&lt;/p&gt;</content><author><name></name></author><summary type="html">Today, I figured out that there is a working pw.x executable for Quantum Espresso on the DoD machines Conrad and Gordon. It is located in /app/espresso/6.3-intel/bin. All you need is a PBS script with an execution line like</summary></entry><entry><title type="html">Compiling LAMMPS on Koehr</title><link href="/compiling/lammps/2019/01/28/compiling-lammps-on-koehr.html" rel="alternate" type="text/html" title="Compiling LAMMPS on Koehr" /><published>2019-01-28T00:00:00-05:00</published><updated>2019-01-28T00:00:00-05:00</updated><id>/compiling/lammps/2019/01/28/compiling-lammps-on-koehr</id><content type="html" xml:base="/compiling/lammps/2019/01/28/compiling-lammps-on-koehr.html">&lt;p&gt;Today, I was able to successfully compile LAMMPS on DoD machine Koehr. First, I used &lt;code class=&quot;highlighter-rouge&quot;&gt;mpicc&lt;/code&gt; as my C++ compiler. Then, I manually pointed the makefile to Intelâ€™s MPI libraries using the following three lines of code:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;MPI_INC =       -I/app/intel/parallel_studio_xe_2018_update1/impi/2018.1.163/intel64/include
MPI_PATH =      -L/app/intel/parallel_studio_xe_2018_update1/impi/2018.1.163/intel64/lib
MPI_LIB =
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Finally, I manually pointed the makefile to the FFTW3 library as follows :&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;FFT_INC =       -I/app/COST/fftw3/3.3.5/intel/include
FFT_PATH =      -L/app/COST/fftw3/3.3.5/intel/lib
FFT_LIB =       -lfftw3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Thatâ€™s all she wrote! Of course, I executed make in parallel as &lt;code class=&quot;highlighter-rouge&quot;&gt;make -j 48 &amp;lt;Makefile suffix&amp;gt;&lt;/code&gt;. Next, Iâ€™m going to test this recipe on other DoD computers.&lt;/p&gt;

&lt;p&gt;P.S. It is necessary to load the modules &lt;code class=&quot;highlighter-rouge&quot;&gt;costinit&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;fftw3/intel/3.3.5&lt;/code&gt;, and &lt;code class=&quot;highlighter-rouge&quot;&gt;compiler/intelmpi/18.0.1.163&lt;/code&gt; prior to running LAMMPS. I added two lines in my &lt;code class=&quot;highlighter-rouge&quot;&gt;.bashrc&lt;/code&gt; to take care of this. This can also be done in your PBS script.&lt;/p&gt;</content><author><name></name></author><summary type="html">Today, I was able to successfully compile LAMMPS on DoD machine Koehr. First, I used mpicc as my C++ compiler. Then, I manually pointed the makefile to Intelâ€™s MPI libraries using the following three lines of code:</summary></entry></feed>